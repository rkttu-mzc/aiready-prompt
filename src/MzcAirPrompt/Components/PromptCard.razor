@using MzcAirPrompt.Models

<div class="prompt-card @(Prompt.IsFavorite ? "favorite" : "")" @onclick="() => OnCardClick?.Invoke(Prompt.Id)">    <div class="prompt-header">
        <div class="title-section">
            <h3 class="prompt-title">@Prompt.Title</h3>
        </div>
        <div class="header-actions">
            <span class="prompt-category">@Prompt.Category</span>
            @if (OnToggleFavorite != null)
            {
                <button class="favorite-btn" @onclick:stopPropagation="true" @onclick="async () => await (OnToggleFavorite?.Invoke(Prompt) ?? Task.CompletedTask)">
                    @(Prompt.IsFavorite ? "üíñ" : "ü§ç")
                </button>
            }
        </div>
    </div>
    
    <p class="prompt-description">@Prompt.Description</p>
    
    <div class="prompt-tags">
        @foreach (var tag in Prompt.Tags.Take(MaxTags))
        {
            <span class="tag">@tag</span>
        }
        @if (Prompt.Tags.Count > MaxTags)
        {
            <span class="tag-more">+@(Prompt.Tags.Count - MaxTags)</span>
        }
    </div>
    
    <div class="prompt-footer">
        <span class="prompt-author">@Prompt.Author</span>
        <span class="prompt-date">@Prompt.UpdatedDate.ToString("yyyy.MM.dd")</span>
    </div>
</div>

@code {
    [Parameter] public PromptItem Prompt { get; set; } = null!;
    [Parameter] public int MaxTags { get; set; } = 3;
    [Parameter] public Action<string>? OnCardClick { get; set; }
    [Parameter] public Func<PromptItem, Task>? OnToggleFavorite { get; set; }
}
